#include<bits/stdc++.h>
#define ll long long
using namespace std;
const int mod=(int)(1e9+7);
int solve(int n,int maxw,vector<int>&wt){
	pair<int,int>bitmask[1<<n];
	// pair represents the count of last ride and minmum weight till now 
	bitmask[0]={1,0};
	for(int mask=1;mask<(1<<n);mask++){
		bitmask[mask]={n+1,0};
        for(int p=0;p<n;p++){
        	if(mask&(1<<p)){
        		auto option=bitmask[mask^(1<<p)];
        		if(wt[p]+option.second<=maxw){
        			option.second+=wt[p];
        		}
        		else{
        			option.second=wt[p];
        			option.first++;
        		}
        		bitmask[mask]=min(bitmask[mask],option);
        	}
        }
	}
	return bitmask[(1<<n)-1].first;
}
signed main(){
	int t=1;
	// memset(dp,-1,sizeof dp);
	// cin>>t;
	while(t--){
		int n,maxw;
		cin>>n>>maxw;
        vector<int>a(n);
        for(int i=0;i<n;i++) cin>>a[i];
        cout<<solve(n,maxw,a)<<"\n";
	}
	return 0;
}
// constraints 
// T.C=O(2^n*n)
